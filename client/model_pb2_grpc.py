# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import model_pb2 as model__pb2


class PredictorStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.predictImage = channel.unary_unary(
            '/model.Predictor/predictImage',
            request_serializer=model__pb2.modelRequest.SerializeToString,
            response_deserializer=model__pb2.predictionResponse.FromString,
        )


class PredictorServicer(object):
    """Missing associated documentation comment in .proto file."""

    def predictImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PredictorServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'predictImage': grpc.unary_unary_rpc_method_handler(
            servicer.predictImage,
            request_deserializer=model__pb2.modelRequest.FromString,
            response_serializer=model__pb2.predictionResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'model.Predictor', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class Predictor(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def predictImage(request,
                     target,
                     options=(),
                     channel_credentials=None,
                     call_credentials=None,
                     insecure=False,
                     compression=None,
                     wait_for_ready=None,
                     timeout=None,
                     metadata=None):
        return grpc.experimental.unary_unary(request, target, '/model.Predictor/predictImage',
                                             model__pb2.modelRequest.SerializeToString,
                                             model__pb2.predictionResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
